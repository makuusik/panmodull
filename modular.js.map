{"version":3,"file":"modular.js","sources":["../src/script/modular.js"],"sourcesContent":["const buttons = document.querySelectorAll('.btn');\nconst indicator = document.querySelector('.indicator');\nconst buttonContainer = document.querySelector('.button-container');\nconst all_content = document.querySelectorAll('.options-grid');\n\n// Збереження стану вибраного табу в LocalStorage\nconst savedTabIndex = localStorage.getItem('activeTabIndex') || 0; // Якщо немає збереженого індексу, вибираємо перший таб\nconst firstButton = buttons[savedTabIndex];\nbuttons[savedTabIndex].classList.add('active');\nindicator.style.width = `${firstButton.offsetWidth}px`;\nindicator.style.transform = `translateX(${firstButton.parentElement.offsetLeft}px)`;\n\nbuttons.forEach((button, index) => {\n  button.classList.remove('active');\n  all_content[index]?.classList.remove('active'); // Видаляємо active у всіх options-grid\n});\nbuttons[savedTabIndex].classList.add('active');\nall_content[savedTabIndex]?.classList.add('active');\n\n// Позиціонуємо indicator\nindicator.style.width = `${firstButton.offsetWidth}px`;\nindicator.style.transform = `translateX(${firstButton.offsetLeft}px)`;\n\n// Відновлення вибраного табу при перезавантаженні сторінки\nbuttons.forEach((button, index) => {\n  button.addEventListener('click', function () {\n    // Зняти клас active з усіх кнопок\n    buttons.forEach(btn => btn.classList.remove('active'));\n\n    // Додати клас active до натиснутої кнопки\n    button.classList.add('active');\n\n    // Отримуємо ширину кнопки та її позицію\n    const buttonWidth = button.offsetWidth;\n    const buttonOffset = button.parentElement.offsetLeft; // Враховуємо відступ <li>\n\n    // Позиціонуємо indicator\n    indicator.style.transform = `translateX(${buttonOffset}px)`;\n    indicator.style.width = `${buttonWidth}px`; // Робимо ширину рівною кнопці\n\n    all_content.forEach(content => {\n      content.classList.remove('active');\n    });\n    all_content[index].classList.add('active');\n\n    // Зберігаємо індекс вибраної вкладки\n    localStorage.setItem('activeTabIndex', index);\n  });\n});\n\nfunction generateHouseBlocksForAllGrids(ranges, jsonData) {\n  document.querySelectorAll('.options-grid').forEach((contentBox, index) => {\n    const [start, end] = ranges[index];\n    let totalItems = end - start + 1;\n\n    // Виключаємо елемент з id 14\n    if (start <= 14 && end >= 14) {\n      totalItems--;\n    }\n\n    const existingButtons = contentBox.querySelectorAll('button');\n    const lastButton =\n      existingButtons.length > 0\n        ? existingButtons[existingButtons.length - 1]\n        : null;\n    const totalExistingButtons = existingButtons.length;\n\n    const totalWithExisting = totalItems + totalExistingButtons; // Враховуємо вже наявні кнопки\n    let remainder = totalWithExisting % 3; // Скільки елементів залишиться \"зайвими\" в останньому ряді\n\n    const fragment = document.createDocumentFragment();\n    let tempRow = []; // Тимчасовий масив для row-last\n\n    for (let i = start; i <= end; i++) {\n      if (i === 14) continue; // Пропускаємо 14\n\n      // Визначаємо заголовок\n      let title = '';\n      if (i >= 17 && i <= 38) title = `DOM MODUŁOWY MH-${i}`;\n      else if (i >= 40 && i <= 43) title = `BIURO MODUŁOWE MH-${i}`;\n      else if (i >= 44 && i <= 46) title = `SAUNA MODUŁOWA MH-${i}`;\n      else if (i >= 7 && i <= 16) title = `DOMEK MODUŁOWY MH-${i}`;\n\n      // Отримуємо short-info з jsonData\n      let shortInfo = 'Brak opisu';\n      if (jsonData && Array.isArray(jsonData)) {\n        const flatData = jsonData.flat();\n        const houseData = flatData.find(item => item.index === i);\n        if (houseData && houseData['short-info']) {\n          shortInfo = houseData['short-info'];\n        }\n      }\n      const basePath = import.meta.env.BASE_URL;\n      const houseDiv = document.createElement('button');\n      houseDiv.onclick = function () {\n        openPage(i);\n      };\n\n      houseDiv.innerHTML = `\n          <div class=\"image-wrapper\">\n            <img\n              class=\"img-default\"\n              src=\"${basePath}img/media/modular/${i}.jpg\"\n              alt=\"House ${i}\"\n              width=\"350\"\n              height=\"177\"\n            />\n            <img\n              class=\"img-hover\"\n              src=\"${basePath}img/media/modular_alt/${i}_alt.jpg\"\n              alt=\"House ${i}\"\n              width=\"350\"\n              height=\"177\"\n            />\n          </div>\n          <h2>${title}</h2>\n          <p>${shortInfo}</p>\n        `;\n\n      // Визначаємо, чи елемент потрапляє в row-last\n      if (\n        remainder > 0 &&\n        totalExistingButtons + fragment.childNodes.length + tempRow.length >=\n          totalWithExisting - remainder\n      ) {\n        tempRow.push(houseDiv);\n      } else {\n        fragment.appendChild(houseDiv);\n      }\n    }\n\n    // Якщо в tempRow є елементи, створюємо row-last\n    if (tempRow.length > 0) {\n      const rowLastDiv = document.createElement('div');\n      rowLastDiv.classList.add('row-last');\n      tempRow.forEach(el => rowLastDiv.appendChild(el));\n      fragment.appendChild(rowLastDiv);\n    }\n\n    // Вставляємо фрагмент у DOM після всіх кнопок\n    if (lastButton) {\n      lastButton.after(fragment);\n    } else {\n      contentBox.prepend(fragment);\n    }\n  });\n}\n\n// Приклад масиву діапазонів для кожного options-grid\nconst ranges = [\n  [17, 38], // Для першого options-grid\n  [40, 43], // Для другого options-grid\n  [44, 46], // Для третього options-grid\n  [7, 16], // Для четвертого options-grid\n];\n\nfetch('updated_data.json') // Змініть шлях, якщо JSON у іншому місці\n  .then(response => response.json())\n  .then(jsonData => {\n    generateHouseBlocksForAllGrids(ranges, jsonData);\n  })\n  .catch(error => console.error('Помилка завантаження JSON:', error));\n\nfunction openPage(pageNumber) {\n  window.location.href = `content.html?page=${pageNumber}`;\n}\n"],"names":["buttons","indicator","all_content","savedTabIndex","firstButton","button","index","_a","btn","buttonWidth","buttonOffset","content","generateHouseBlocksForAllGrids","ranges","jsonData","contentBox","start","end","totalItems","existingButtons","lastButton","totalExistingButtons","totalWithExisting","remainder","fragment","tempRow","i","title","shortInfo","houseData","item","basePath","houseDiv","openPage","rowLastDiv","el","response","error","pageNumber"],"mappings":"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"}